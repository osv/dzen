name: Build and Run Integration Tests

on:
  push:
    branches:
      - '**'  # Run on all branches
  pull_request:
    branches:
      - '**'  # Run on all pull requests

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Restore apt cache
      - name: Restore APT Cache
        uses: actions/cache@v3
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('apt-packages-list.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      # Install build and test dependencies
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            autoconf \
            automake \
            libtool \
            pkg-config \
            libx11-dev \
            libxft-dev \
            libxpm-dev \
            fonts-dejavu-core \
            xdotool \
            imagemagick \
            x11-apps \
            xvfb \
            x11-xkb-utils \
            xkb-data

      # Save a list of installed packages to cache key
      - run: dpkg-query -W -f='${binary:Package}\n' > apt-packages-list.txt

      # Generate the configure script
      - name: Generate configure script
        run: autoreconf -vif

      # Run configure
      - name: Configure the project
        run: ./configure --enable-gadgets --enable-xft --enable-xpm --enable-xinerama --enable-xcursor

      # Build the app using Makefile
      - name: Build the application
        run: |
          make

      # Start the Xvfb (Virtual Framebuffer)
      - name: Start Xvfb (Virtual Framebuffer)
        run: |
          # Start Xvfb on display :99
          Xvfb :99 -screen 0 1920x1080x24  &
          # Set the DISPLAY environment variable to use the virtual display
          export DISPLAY=:99
          # waiting for framebuffer
          sleep 3
          fc-list
          # run tests
          make test

      # Step 6: Upload screenshots and diffs as artifacts if tests fail
      - name: Upload screenshots as artifacts (for debugging)
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: integration-tests

      # TODO: fix build without xft too
      - name: Compile without xinerama, xcursor, xpm
        run: |
          make clean
          ./configure --disable-xinerama --disable-xcursor --disable-xpm
          make
